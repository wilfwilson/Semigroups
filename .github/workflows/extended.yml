name: "Extended CI tests"
on:
  workflow_dispatch:
  pull_request:
    paths:
      - ".VERSION"

jobs:
  extended:
    name: "${{ matrix.gap-branch }} / ${{ matrix.os }} / ${{ matrix.ABI }}-bit"
    runs-on: "${{ matrix.os }}-latest"
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu
        gap-branch:
          - master
        ABI:
          - 64
          - 32

        include:
          # macOS job
          - gap-branch: master
            # to ensure datastructures>= v0.2.6
            pkgs-to-clone: "datastructures"
            os: macos
            ABI: 64

    steps:
      - uses: actions/checkout@v5
      - name: "Install dependencies (macOS only!)"
        if: ${{ runner.os == 'macOS' }}
        run: brew install automake autoconf zlib gmp pkg-config libtool
      # Setup ccache, to speed up repeated compilation of the same binaries
      # (i.e., GAP and the packages)
      - name: "Setup ccache"
        if: ${{ runner.os != 'Windows' }}
        uses: Chocobo1/setup-ccache-action@v1
        with:
          update_packager_index: false
          override_cache_key: ${{ runner.os }}-${{ matrix.gap-branch }}-${{ matrix.ABI }}-${{ github.ref }}
          override_cache_key_fallback: ${{ runner.os }}-${{ matrix.gap-branch }}-${{ matrix.ABI }}
      - name: "Install GAP"
        uses: gap-actions/setup-gap@v3
        env:
          # We don't understand why this is necessary. Hopefully it can be
          # removed in the fullness of time.
          LDFLAGS: "-pthread"
          ABI: ${{ matrix.ABI }}
        with:
          gap-version: ${{ matrix.gap-branch }}
      - name: "Install necessary GAP package clones"
        shell: bash
        run: |
          # digraphs included here to ensure version >=1.5.0
          for PKG in https://github.com/digraphs/Digraphs.git ${{ matrix.pkgs-to-clone }}; do
            cd ${GAPROOT}/pkg
            git clone $PKG
          done
      - name: "Build necessary GAP packages"
        shell: bash
        env:
          ABI: ${{ matrix.ABI }}
        run: |
          cd ${GAPROOT}/pkg
          ../bin/BuildPackages.sh --strict digraphs* io* orb* datastructures* profiling*
      - name: "Build Semigroups"
        uses: gap-actions/build-pkg@v1
        with:
          ABI: ${{ matrix.ABI }}
          CONFIGFLAGS: --disable-hpcombi
      - name: "Run GAP's tst/teststandard.g"
        uses: gap-actions/run-pkg-tests@v2
        with:
          GAP_TESTFILE: "ci/run-gap-teststandard.g"
      - name: "Run GAP's tst/testbugfix.g"
        uses: gap-actions/run-pkg-tests@v2
        with:
          GAP_TESTFILE: "ci/run-gap-testbugfix.g"
